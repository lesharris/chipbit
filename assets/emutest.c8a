; Setting used by the chipper assembler
option schip11
option binary
align off

; Recursive Disassembly
End of file
0x0200	jp loc_0248
0x0202	db #45	;GRAPHIC =  #   # #	ASCII(E)
0x0203	db #6d	;GRAPHIC =  ## ## #	ASCII(m)
0x0204	db #75	;GRAPHIC =  ### # #	ASCII(u)
0x0205	db #54	;GRAPHIC =  # # #  	ASCII(T)
0x0206	db #61	;GRAPHIC =  ##    #	ASCII(a)
0x0207	db #6c	;GRAPHIC =  ## ##  	ASCII(l)
0x0208	db #6b	;GRAPHIC =  ## # ##	ASCII(k)
loc_0209:   ; == START OF CODE BLOCK ==
0x0209	ld v0, #00
0x020b	ld v1, #1d
0x020d	ld I, #0245
0x020f	drw v0, v1, #3
0x0211	ld v0, #0a
0x0213	ld v1, #03
0x0215	ld I, #0235
0x0217	drw v0, v1, #0
0x0219	ld v0, #03
0x021b	ld v1, #00
0x021d	ld v2, #00
0x021f	ld v3, #3c
loc_0221:   ; == START OF CODE BLOCK ==
0x0221	sne v2, v0
0x0223	jp loc_0231
0x0225	add v2, #01
0x0227	ld dt, v3
loc_0229:   ; == START OF CODE BLOCK ==
0x0229	ld v4, dt
0x022b	se v4, v1
0x022d	jp loc_0229
0x022f	jp loc_0221
loc_0231:   ; == START OF CODE BLOCK ==
0x0231	scd 
loc_0233:   ; == START OF CODE BLOCK ==
0x0233	jp loc_0233
0x0235	db #88	;GRAPHIC = #   #   
0x0236	db #88	;GRAPHIC = #   #   
0x0237	db #f8	;GRAPHIC = #####   
0x0238	db #88	;GRAPHIC = #   #   
0x0239	db #88	;GRAPHIC = #   #   
0x023a	db #20	;GRAPHIC =   #     
0x023b	db #50	;GRAPHIC =  # #    	ASCII(P)
0x023c	db #88	;GRAPHIC = #   #   
0x023d	db #f8	;GRAPHIC = #####   
0x023e	db #88	;GRAPHIC = #   #   
0x023f	db #00	;GRAPHIC =         
0x0240	db #f0	;GRAPHIC = ####    
0x0241	db #88	;GRAPHIC = #   #   
0x0242	db #f0	;GRAPHIC = ####    
0x0243	db #80	;GRAPHIC = #       
0x0244	db #80	;GRAPHIC = #       
0x0245	db #f0	;GRAPHIC = ####    
0x0246	db #00	;GRAPHIC =         
0x0247	db #f0	;GRAPHIC = ####    
loc_0248:   ; == START OF CODE BLOCK ==
0x0248	cls
0x024a	low
0x024c	jp loc_0209
0x024e	db #00	;GRAPHIC =         
0x024f	db #00	;GRAPHIC =         
0x0250	db #00	;GRAPHIC =         
0x0251	db #00	;GRAPHIC =         
0x0252	db #45	;GRAPHIC =  #   # #	ASCII(E)
0x0253	db #4f	;GRAPHIC =  #  ####	ASCII(O)
0x0254	db #46	;GRAPHIC =  #   ## 	ASCII(F)
